name: Go Tests

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    environment: live
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        path: todo-vibe
        
    - name: Checkout vibes-framework
      uses: actions/checkout@v3
      with:
        repository: amoscookeh/go-vibes
        path: vibes-framework
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: Run tests
      id: run_tests
      run: |
        cd todo-vibe
        go mod tidy
        go test -v ./... > test_output.txt 2>&1
        TEST_EXIT_CODE=$?
        if [ $TEST_EXIT_CODE -ne 0 ]; then
          echo "TESTS_FAILED=true" >> $GITHUB_ENV
        fi
        # Store exit code for later
        echo "TEST_EXIT_CODE=$TEST_EXIT_CODE" >> $GITHUB_ENV

    - name: Get Gemini suggestions for failing tests
      if: env.TESTS_FAILED == 'true'
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      run: |
        cd todo-vibe
        cat test_output.txt | grep -A 10 "FAIL" > test_failures.txt
        
        # Run the script to get and log suggestions
        go run scripts/gemini_test_analyzer.go
        echo "üîç See Gemini analysis in the job logs"
        
    - name: Exit with original test status
      if: always()
      run: |
        if [ "${{ env.TEST_EXIT_CODE }}" != "0" ]; then
          echo "Tests failed with exit code ${{ env.TEST_EXIT_CODE }}"
          exit 1
        fi 